LABEL \
    org.opencontainers.image.title='StoreChain Server VM' \
    org.opencontainers.image.authors='LilPoppy<lilpoppy96@gmail.com>' \
    org.opencontainers.image.url='https://github.com/lilpoppy' \
    org.opencontainers.image.source='https://github.com/SpamanDev/StoreChain-Server'

#Registry
ARG REGISTRY=container-registry.oracle.com/os

#Platform
ARG PLATFORM_NAME=oraclelinux
ARG PLATFORM_VERSION=8.5

#Project
ARG WORK_DIR=/build

#Graalvms
ARG GRAALVM_VERSION=21.3.0
ARG JAVA_VERSION=java17
ARG GRAALVM_PKG=https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/graalvm-ce-$JAVA_VERSION-GRAALVM_ARCH-$GRAALVM_VERSION.tar.gz
ARG TARGETPLATFORM


FROM ${REGISTRY}/${PLATFORM_NAME}:${PLATFORM_VERSION}


RUN echo -e "\
[ol8_graalvm_community]\n\
name=Oracle Linux 8 graalvm community (\$basearch)\n\
baseurl=https://yum.oracle.com/repo/OracleLinux/OL8/graalvm/community/\$basearch\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle\n\
gpgcheck=1\n\
enabled=1\
" > /etc/yum.repos.d/ol8_graalvm_community.repo

RUN microdnf --enablerepo ol8_codeready_builder install -y graalvm${GRAALVM_YEAR_VERSION}-ce-${JAVA_VERSION}-jdk-${GRAALVM_VERSION} \
    && rm -rf /var/cache/yum
    
RUN fc-cache -f -v

ENV LANG=en_US.UTF-8 \
    JAVA_HOME=/usr/lib64/graalvm/graalvm${GRAALVM_YEAR_VERSION}-ce-java${JAVA_VERSION}/
    
ADD gu-wrapper.sh /usr/local/bin/gu

RUN set -eux \
    && if [ "$TARGETPLATFORM" == "linux/amd64" ]; then GRAALVM_PKG=${GRAALVM_PKG/GRAALVM_ARCH/linux-amd64}; fi \
    && if [ "$TARGETPLATFORM" == "linux/arm64" ]; then GRAALVM_PKG=${GRAALVM_PKG/GRAALVM_ARCH/linux-aarch64}; fi \
    && curl --fail --silent --location --retry 3 ${GRAALVM_PKG} \
    | gunzip | tar x -C /opt/ \

    # Set alternative links
    && mkdir -p "/usr/java" \
    && ln -sfT "$JAVA_HOME" /usr/java/default \
    && ln -sfT "$JAVA_HOME" /usr/java/latest \
    && for bin in "$JAVA_HOME/bin/"*; do \
    base="$(basename "$bin")"; \
    [ ! -e "/usr/bin/$base" ]; \
    alternatives --install "/usr/bin/$base" "$base" "$bin" 20000; \
    done \

    && chmod +x /usr/local/bin/gu
    
ADD . ${WORK_DIR}
WORKDIR ${WORK_DIR}

RUN \
    curl -s "https://get.sdkman.io" | bash; \
    source "$HOME/.sdkman/bin/sdkman-init.sh"; \
    sdk install maven;

RUN source "$HOME/.sdkman/bin/sdkman-init.sh" && mvn --version

RUN native-image --version

CMD java -version

RUN source "$HOME/.sdkman/bin/sdkman-init.sh" && mvn -B clean package -P native --no-transfer-progress

FROM oraclelinux:7-slim

MAINTAINER LilPoppy

COPY --from=0 "/build/target/storechain-server" storechain-server

# docker run -p 8089:8089 storechain-server
CMD [ "sh", "-c", "./storechain-server -Dserver.port=$PORT" ]