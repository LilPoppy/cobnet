project:
   information:
      group-id: "@project.groupId@"
      artifact-id: "@project.artifactId@"
      version: "@project.version@"
      name: "@project.name@"
      description: "@project.description@"
   task-provider:
      thread-count: 16
      max-thread-count: -1
      keep-alive-minutes: 5
      allow-core-thread-timeout: true
      remove-on-cancel-policy: true
      continue-existing-periodic-tasks-after-shutdown-policy: false
      execute-existing-delayed-tasks-after-shutdown-policy: false
spring:
   application:
      name: ${project.information.name}
   main:
      allow-circular-references: false
      allow-bean-definition-overriding: true
   thymeleaf:
      enabled: true
      cache: false
      check-template: true
      check-template-location: true
      encoding: UTF-8
      prefix: classpath:/webapp/WEB-INF/templates/
      suffix: .html
   sleuth:
      async:
         enabled: false
   cloud:
      refresh:
         enabled: false
      compatibility-verifier:
         enabled: false
   h2:
      console:
         enabled: true
         settings:
            web-allow-others: true
   datasource:
      initialize: false
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://@db-host@:@db-port@/@db-database@
      username: "@db-user@"
      password: "@db-password@"
   jpa:
      hibernate:
         ddl-auto: update
      show-sql: false
   redis:
      message:
         topics: "chat"
      mode: stand-alone #cluster #sentinal
      database: 0
      host: "@redis-host@"
      port: 0@redis-port@
      password: "@redis-password@"
      timeout: 300ms
      namespace: spring
      pipelining-buffered: 1
      cluster:
         nodes: "@redis-host@:@redis-port@"
         max-redirects: 3
      sentinel:
         master: master
         nodes: "@redis-host@:@redis-port@"
         password: "@redis-password@"
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
   session:
      store-type: redis
      namespace: spring
   cache:
      start-clear: false
   mail:
      host: smtp.gmail.com
      #465 SSL 587 TLS
      port: 587
      username: username
      password: password
      properties:
         mail:
            smtp:
               auth: true
               ssl:
                  enable: true
   security:
      session-limit-enable: true
      session-created-time-require: 3s
      username-format-regex: ^[a-zA-Z0-9]{6,16}$
      password-format-regex: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]{8,}$
      permission-default-power: 3
      max-attempt-login: 5
      max-attempt-login-reset: 10m
      max-attempt-login-account-locks: true
      max-attempt-login-account-locks-duration: 30m
      human-validation-enable: false
      human-validation-create-interval: 30s
      human-validation-expire: 10m
      phone-number-verify-enable: true
      phone-number-sms-generate-interval: 60s
      phone-number-sms-code-expire: 5m
      phone-number-sms-verify-times: 3
      phone-number-verify-sms-message: "$(code) is your ${project.information.name} verification code."
      phone-number-max-use: 10
      email-max-use: 10
      google-map-autocomplete-limit: 15
      google-map-autocomplete-limit-duration: 5m
      user-default-role: "user"
      authentication-url: "/visitor/login"
      login-page-url: "/visitor/login"
      logout-url: "/user/logout"
# default will do restful way
#      login-success-url: "/index"
#      login-failure-url: "/login?error=true"
#      logout-success-url: "/index"
      username-parameter: "username"
      password-parameter: "password"
      remember-me-parameter: "remember-me"
      oauth2:
         authentication-url: "/oauth2/login/authorization"
         redirect-url: "/login/oauth2/code"
         login-success-url: "/tabPage"
         login-failure-url: "/"
         client:
            registration:
               google:
                  clientId: "551574670756-6ier4u8j1gts9mbh1u14ebl50enqtge6.apps.googleusercontent.com"
                  clientSecret: "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"
                  client-authentication-method: basic
                  authorization-grant-type: authorization_code
#      set this to google oauth console
#      https://www.storebeans.com/api/login/oauth2/code/google
                  redirect-uri-template: "{baseUrl}${spring.security.oauth2.redirect-uri}/{registrationId}"
                  scope: openid, profile, email, address, phone
                  client-name: Google Login
               resource:
                  user-info-uri: https://www.googleapis.com/userinfo/v2/me
                  prefer-token-info: false
            provider: 
               google:   
                  authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
                  token-uri: https://www.googleapis.com/oauth2/v4/token
                  user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
                  jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
                  user-name-attribute: sub
logging:
   file: 
      name: ./logs/spring.log
   level:
      root: INFO
server:
   tomcat:
      relaxed-query-chars: '[,]'
   port: "@tomcat-port@"
   forward-headers-strategy: framework
   session: 
      cookie:
        http-only: false
        timeout: 1500
#   ssl:
#      key-store: classpath:keystore/cobnet.p12
#      key-store-password: 123456
#      key-store-type: PKCS12
#      key-alias: 1
eureka:
   instance:
      hostname: localhost
   client:
      registerWithEureka: false
      fetchRegistry: false
      service-url:
         defaultZone: https://localhost:@tomcat-port@/eureka
management:
   server:
      ssl:
         enable: true
twilio:
   account-sid: ACaa871dd615aca9c8d798ec44aaeed2f5
   authentication-token: 8dbbb78af76fecda8859fec5d69b21aa
   numbers: +19108078297
google:
   console:
      api-key: "AIzaSyD-HiZ_YWGYSb7GcTXu8T-TLTf_TCnT62U"
      credentials: ${PWD}/target/classes/keystore/storebeans-348721-abf3282acdd2.json
netty:
   enable: true
   servers:
      -
         name: web-socket
         port: "@websocket-port@"
         provider: com.storechain.connection.netty.provider.WebSocketServerProvider
         handler: com.storechain.connection.netty.websocket.handler.WebSocketServerInitializeHandler
         sub-handler: com.storechain.connection.netty.websocket.handler.WebSocketChannelInitializeHandler
         channel-builder: com.storechain.connection.netty.builder.WebSocketSessionBuilder
         options:
            -
               SO_BACKLOG: 1024
         encode-endian: BIG
         decode-endian: BIG
         charset: UTF-8
         log-user-active: true
         log-user-inactive: true
         log-channel-read: true
         log-channel-write: true
         log-banned-ip-active: true
         allow-unauthorized: false
         allow-unknown-packet: false
file-source:
   url: file:${PWD}/resource/files
springdoc:
   api-docs:
      enable: true
      path: /v3/api-docs
   swagger-ui:
      path: /swagger-ui
      enabled: true
      disable-swagger-default-url: true
