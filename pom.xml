<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.lilpoppy</groupId>
	<artifactId>cobnet</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>CoBNet</name>
	<packaging>jar</packaging>
	<description>Code being net written under spring-native, the convenient solution of native-cloud.</description>
	<properties>
		<java.version>17</java.version>
		<db-database>testdb</db-database>
		<db-auto-reconnect>true</db-auto-reconnect>
		<db-use-ssl>false</db-use-ssl>
		<db-host>localhost</db-host>
		<db-port>3306</db-port>
		<db-user>root</db-user>
		<db-password>hT9zS5cR8aY4vM3r</db-password>
		<db-root-password>FW/hT9zS5cR8aY4vM3r</db-root-password>
		<redis-host>localhost</redis-host>
		<redis-port>6379</redis-port>
		<redis-password>fX9lU9gB1zA6aF3q</redis-password>
		<tomcat-port>8089</tomcat-port>
		<websocket-port>8090</websocket-port>
		<repackage.classifier/>
		<spring-cloud.version>2021.0.1</spring-cloud.version>
		<spring-native.version>0.11.3</spring-native.version>
		<native-build-tools.version>0.9.10</native-build-tools.version>
		<graalvm.version>22.0.0.2</graalvm.version>
		<dockerfile-maven.version>0.38.0</dockerfile-maven.version>
		<google-zxing.version>3.4.1</google-zxing.version>
		<docker-maintainer>LilPoppy</docker-maintainer>
		<docker-image-name>${project.artifactId}:${project.version}</docker-image-name>
		<docker-container-name>${project.artifactId}</docker-container-name>
		<docker-db-image-name>${project.artifactId}-db</docker-db-image-name>
		<docker-redis-image-name>${project.artifactId}-redis</docker-redis-image-name>
		<docker-target>jvm</docker-target>
		<docker-compose-skips>true</docker-compose-skips>
		<skipTests>true</skipTests>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-jose</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-websocket</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>webjars-locator-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>sockjs-client</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>stomp-websocket</artifactId>
			<version>2.3.3</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>3.3.7</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>3.1.1-1</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.graalvm.sdk</groupId>
			<artifactId>graal-sdk</artifactId>
			<version>${graalvm.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.graalvm.nativeimage</groupId>
			<artifactId>svm</artifactId>
			<version>${graalvm.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.graalvm.tools</groupId>
			<artifactId>profiler</artifactId>
			<version>${graalvm.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.graalvm.tools</groupId>
			<artifactId>chromeinspector</artifactId>
			<version>${graalvm.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<dependency>
			<groupId>com.twilio.sdk</groupId>
			<artifactId>twilio</artifactId>
			<version>8.27.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>${google-zxing.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>${google-zxing.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.6.7</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-security</artifactId>
			<version>1.6.7</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-native</artifactId>
			<version>1.6.7</version>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.14.3</version>
		</dependency>
		<dependency>
			<groupId>com.google.maps</groupId>
			<artifactId>google-maps-services</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-translate</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-storage</artifactId>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.google.cloud</groupId>
				<artifactId>libraries-bom</artifactId>
				<version>25.1.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<classifier>${repackage.classifier}</classifier>
					<image>
						<builder>paketobuildpacks/builder:tiny</builder>
						<env>
							<BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
						</env>
					</image>
					<systemPropertyVariables>
						<springAot>true</springAot>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>exec-maven-plugin</artifactId>
				<groupId>org.codehaus.mojo</groupId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>password-initializer</id>
						<phase>initialize</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>sh</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>
								<argument>${project.basedir}/random-password.sh</argument>
								<argument>${db-password}</argument>
								<argument>${db-root-password}</argument>
								<argument>${redis-password}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${skipTests}</skipTests>
				</configuration>
			</plugin>
			<!--			<plugin>-->
			<!--				<groupId>org.hibernate.orm.tooling</groupId>-->
			<!--				<artifactId>hibernate-enhance-maven-plugin</artifactId>-->
			<!--				<version>${hibernate.version}</version>-->
			<!--				<executions>-->
			<!--					<execution>-->
			<!--						<id>enhance</id>-->
			<!--						<goals>-->
			<!--							<goal>enhance</goal>-->
			<!--						</goals>-->
			<!--						<configuration>-->
			<!--							<failOnError>true</failOnError>-->
			<!--							<enableLazyInitialization>true</enableLazyInitialization>-->
			<!--							<enableDirtyTracking>true</enableDirtyTracking>-->
			<!--							<enableAssociationManagement>true</enableAssociationManagement>-->
			<!--							<enableExtendedEnhancement>false</enableExtendedEnhancement>-->
			<!--						</configuration>-->
			<!--					</execution>-->
			<!--				</executions>-->
			<!--			</plugin>-->
			<plugin>
				<groupId>com.dkanejs.maven.plugins</groupId>
				<artifactId>docker-compose-maven-plugin</artifactId>
				<configuration>
					<envVars>
						<IMAGE_NAME>${docker-image-name}</IMAGE_NAME>
						<CONTAINER_NAME>${docker-container-name}</CONTAINER_NAME>
						<EXPOSE>${tomcat-port}</EXPOSE>
						<WEBSOCKET_EXPOSE>${websocket-port}</WEBSOCKET_EXPOSE>
						<DB_IMAGE_NAME>${docker-db-image-name}</DB_IMAGE_NAME>
						<DB_AUTO_RECONNECT>${db-auto-reconnect}</DB_AUTO_RECONNECT>
						<DB_USE_SSL>${db-use-ssl}</DB_USE_SSL>
						<DB_HOST>${db-host}</DB_HOST>
						<DB_EXPOSE>${db-port}</DB_EXPOSE>
						<DB_DATABASE>${db-database}</DB_DATABASE>
						<DB_USER>${db-user}</DB_USER>
						<DB_PASSWORD>${db-password}</DB_PASSWORD>
						<REDIS_IMAGE_NAME>${docker-redis-image-name}</REDIS_IMAGE_NAME>
						<REDIS_HOST>${redis-host}</REDIS_HOST>
						<REDIS_EXPOSE>${redis-port}</REDIS_EXPOSE>
						<REDIS_PASSWORD>${redis-password}</REDIS_PASSWORD>
					</envVars>
				</configuration>
				<executions>
					<execution>
						<id>up</id>
						<phase>install</phase>
						<goals>
							<goal>up</goal>
						</goals>
						<configuration>
							<composeFile>${project.basedir}/docker-compose.yml</composeFile>
							<skip>${docker-compose-skips}</skip>
							<detachedMode>true</detachedMode>
							<buildArgs>
								<forceRm>true</forceRm>
							</buildArgs>
						</configuration>
					</execution>
					<execution>
						<id>down</id>
						<phase>initialize</phase>
						<goals>
							<goal>down</goal>
						</goals>
						<configuration>
							<composeFile>${project.basedir}/docker-compose.yml</composeFile>
							<skip>${docker-compose-skips}</skip>
							<removeVolumes>true</removeVolumes>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>clojars</id>
			<name>Clojars</name>
			<url>https://repo.clojars.org/</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<profiles>
		<profile>
			<id>docker</id>
			<properties>
				<docker-compose-skips>false</docker-compose-skips>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${dockerfile-maven.version}</version>
						<configuration>
							<images>
								<image>
									<name>${docker-image-name}</name>
									<alias>${project.name}</alias>
									<build>
										<dockerFile>${project.basedir}/Dockerfile</dockerFile>
										<args>
											<TARGET_BUILD>${docker-target}</TARGET_BUILD>
											<ARTIFACTID>${project.artifactId}</ARTIFACTID>
											<VERSION>${project.version}</VERSION>
											<AUTHORS>${docker-maintainer}</AUTHORS>
											<AUTHORS_EMAIL>lilpoppy96@gmail.com</AUTHORS_EMAIL>
											<SOURCE_REPO>https://github.com/StorebeansDev/${project.name}}</SOURCE_REPO>
											<GRAALVM_VERSION>${graalvm.version}</GRAALVM_VERSION>
											<JAVA_VERSION>java${java.version}</JAVA_VERSION>
											<WORK_DIR>/${project.artifactId}</WORK_DIR>
											<!-- https://yum.oracle.com/repo/OracleLinux/OL8/baseos/latest/x86_64/index.html -->
											<RPM_REPO>oraclelinux-release-el8</RPM_REPO>
											<!-- https://yum.oracle.com/repo/OracleLinux/OL8/codeready/builder/x86_64/index_src.html -->
											<RPM_CODEREADY_BUILDER>ol8_codeready_builder</RPM_CODEREADY_BUILDER>
											<INSTALLATIONS>procps-ng bzip2-devel zip unzip ed gcc gcc-c++ gcc-gfortran gzip file fontconfig less libcurl-devel make openssl apr-devel openssl-devel readline-devel tar glibc-langpack-en net-tools python3-libs</INSTALLATIONS>
											<TARGETPLATFORM>linux/amd64</TARGETPLATFORM>
											<PORT>${tomcat-port}</PORT>
											<WEBSOCKET_PORT>${websocket-port}</WEBSOCKET_PORT>
											<DB_DATABASE>${db-database}</DB_DATABASE>
											<DB_AUTO_RECONNECT>${db-auto-reconnect}</DB_AUTO_RECONNECT>
											<DB_USE_SSL>${db-use-ssl}</DB_USE_SSL>
											<DB_HOST>${db-host}</DB_HOST>
											<DB_PORT>${db-port}</DB_PORT>
											<DB_USER>${db-user}</DB_USER>
											<DB_PASSWORD>${db-password}</DB_PASSWORD>
											<DB_ROOT_PASSWORD>${db-root-password}</DB_ROOT_PASSWORD>
											<REDIS_HOST>${redis-host}</REDIS_HOST>
											<REDIS_PORT>${redis-port}</REDIS_PORT>
											<REDIS_PASSWORD>${redis-password}</REDIS_PASSWORD>
										</args>
									</build>
								</image>
								<image>
									<name>${docker-db-image-name}</name>
									<alias>db</alias>
									<build>
										<from>mysql:latest</from>
										<maintainer>${docker-maintainer}</maintainer>
										<ports>${db-port}</ports>
										<tags>
											<tag>latest</tag>
											<tag>${project.version}</tag>
										</tags>
									</build>
								</image>
								<image>
									<name>${docker-redis-image-name}</name>
									<alias>redis</alias>
									<build>
										<from>redis:latest</from>
										<maintainer>${docker-maintainer}</maintainer>
										<ports>${redis-port}</ports>
										<tags>
											<tag>latest</tag>
											<tag>${project.version}</tag>
										</tags>
									</build>
								</image>
							</images>
							<useColor>true</useColor>
							<logStdout>true</logStdout>
							<verbose>true</verbose>
						</configuration>
						<executions>
							<execution>
								<id>build-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>native</id>
			<properties>
				<repackage.classifier>exec</repackage.classifier>
				<native-buildtools.version>${native-build-tools.version}</native-buildtools.version>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.experimental</groupId>
					<artifactId>spring-native</artifactId>
					<version>${spring-native.version}</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.experimental</groupId>
						<artifactId>spring-aot-maven-plugin</artifactId>
						<version>${spring-native.version}</version>
						<executions>
							<execution>
								<id>generate</id>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
							<execution>
								<id>test-generate</id>
								<goals>
									<goal>test-generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${native-build-tools.version}</version>
						<extensions>true</extensions>
						<configuration>
							<buildArgs>
								<!--								<buildArgs>-DskipTests</buildArgs>-->
								<buildArgs>-H:TraceClassInitialization=true</buildArgs>
								<!--<buildArgs>- -no-server</buildArgs>-->
								<buildArgs>--no-fallback</buildArgs>
								<buildArgs>--report-unsupported-elements-at-runtime</buildArgs>
								<buildArgs>--allow-incomplete-classpath</buildArgs>
								<!--<buildArgs>-H:+AddAllCharsets</buildArgs>-->
								<buildArgs>-Dlogging.config=logback-config.xml</buildArgs>
								<buildArgs>--features=com.cobnet.RuntimeReflectionRegistrationFeature</buildArgs>
								<buildArgs>-H:ConfigurationFileDirectories==${basedir}/src/main/java/</buildArgs>
								<buildArgs>-H:ReflectionConfigurationFiles=${basedir}/src/main/java/extra-reflect-config.json</buildArgs>
								<buildArgs>-H:ResourceConfigurationFiles=${basedir}/src/main/java/extra-resource-config.json</buildArgs>
								<buildArgs>-H:DynamicProxyConfigurationFiles=${basedir}/src/main/java/extra-proxy-config.json</buildArgs>
								<buildArgs>-H:IncludeResources=".*.xml|.*.conf|.*.yml"</buildArgs>
								<buildArgs>-H:TraceClassInitialization=true</buildArgs>
								<buildArgs>-Dtruffle.TruffleRuntime=com.oracle.svm.truffle.api.SubstrateTruffleRuntime</buildArgs>
								<buildArgs>-H:-TruffleCheckBlockListMethods</buildArgs>
								<buildArgs>-H:-TruffleCheckBlackListedMethods</buildArgs>
								<buildArgs>-H:+ReportExceptionStackTraces</buildArgs>
								<buildArgs>-H:+ReportUnsupportedElementsAtRuntime</buildArgs>
								<buildArgs>-H:-InlineBeforeAnalysis</buildArgs>
								<buildArgs>--language:js</buildArgs>
								<!-- The argument to add python below is incompatible in Mac platform-->
								<!--								<buildArgs>&#45;&#45;language:python</buildArgs>-->
								<!--suppress UnresolvedMavenProperty -->
								<buildArgs>-Dpython.StdLibHome=${env.JAVA_HOME}/languages/python/lib-python/3</buildArgs>
								<!--suppress UnresolvedMavenProperty -->
								<buildArgs>-Dpython.CoreHome=${env.JAVA_HOME}/languages/python/lib-graalpython</buildArgs>
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=com.cobnet.utils.TaskProvider</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.apache.tomcat.jni.OS</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.apache.tomcat.jni.SSL</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.python.modules.posix.PosixModule</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.apache.tomcat.util.net.openssl.OpenSSLEngine</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.python.modules.Setup</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.springframework.core.io.VfsUtils</buildArgs>-->

								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.springframework.data.web.XmlBeamHttpMessageConverter</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.springframework.data.web.ProjectingJackson2HttpMessageConverter</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.springframework.boot.logging.log4j2.Log4J2LoggingSystem</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.springframework.boot.liquibase.LiquibaseChangelogMissingFailureAnalyzer</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.springframework.web.multipart.commons.CommonsFileUploadSupport</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$XmlObjectMapperInitializer</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.springframework.boot.r2dbc.EmbeddedDatabaseConnection</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=io.netty.handler.ssl.ConscryptAlpnSslEngine</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=io.netty.util.internal.logging.Log4JLogger</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=reactor.core.publisher.Traces$SharedSecretsCallSiteSupplierFactory$TracingException</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=com.netflix.discovery.shared.transport.jersey.JerseyEurekaHttpClientFactory</buildArgs>-->
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=org.hibernate.secure.internal.StandardJaccServiceImpl</buildArgs>-->
								<!-- Incompatible at initialize at build times for graalvm version 22.0.0.2 -->
								<buildArgs>--initialize-at-run-time=io.netty.handler.ssl.util.ThreadLocalInsecureRandom,io.netty.channel.unix,io.netty.channel.epoll,io.netty.channel.kqueue</buildArgs>
								<buildArgs>--initialize-at-run-time=io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator</buildArgs>
								<buildArgs>--initialize-at-run-time=io.netty.handler.ssl.JettyNpnSslEngine</buildArgs>
								<!--								<buildArgs>&#45;&#45;initialize-at-run-times=com.cobnet.EntryPoint</buildArgs>-->
							</buildArgs>

						</configuration>
						<executions>
							<execution>
								<id>build-native</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>